#include <cstdint>

#pragma once
namespace static_eval {
	//PAWN, KNIGHT, BISHOP, ROOK, QUEEN
	const int16_t PIECE_EVAL[5] = { 100, 320, 330, 500, 900 };
	//accounts for kings aswell
	const int16_t SEE_PIECE_EVAL[6] = { 100, 330, 330, 500, 900, 2000 };
	//helps determin if a position is equal if you only count piece values and skip pawns
	const int16_t PIECE_VALUE_EQL_POSITIONS[5] = { 100, 300, 300, 500, 900 };

	const int16_t POSITION_VALUE[2][5][64]
	{
		//it seems to be flipped, but look at with indexes
		//index 0 is a1 - index 63 is h8
		//so the first row represents actually the last board

		//white
		{
			//Pawn
			{0, 0, 0, 0, 0, 0, 0, 0,
			5, 10, 10,-20,-20, 10, 10, 5,
			5, -5,-10, 0 , 0 ,-10, -5, 5,
			0,  0,  0, 20, 20,  0,  0, 0,
			5,  5, 10, 25, 25, 10,  5, 5,
			10, 10, 20, 30, 30, 20, 10, 10,
			50, 50, 50, 50, 50, 50, 50, 50,
			0, 0, 0, 0, 0, 0, 0, 0},

			//Knight
			{-50,-40,-30,-30,-30,-30,-40,-50,
			-40,-20, 0, 5, 5, 0,-20,-40,
			-30, 5, 10, 15, 15, 10, 5,-30,
			-30, 0, 15, 20, 20, 15, 0,-30,
			-30, 5, 15, 20, 20, 15, 5,-30,
			-30, 0, 10, 15, 15, 10, 0,-30,
			-40,-20, 0, 0, 0, 0,-20,-40,
			-50,-40,-30,-30,-30,-30,-40,-50},

			//Bishop
			{-20,-10,-10,-10,-10,-10,-10,-20,
			-10, 5, 0, 0, 0, 0, 5,-10,
			-10, 10, 10, 10, 10, 10, 10,-10,
			-10, 0, 10, 10, 10, 10, 0,-10,
			-10, 5, 10, 10, 10, 10, 5,-10,
			-10, 0, 5, 10, 10, 5, 0,-10,
			-10, 0, 0, 0, 0, 0, 0,-10,
			-20,-10,-10,-10,-10,-10,-10,-20},

			//Rook
			{0,0, 0, 5, 5, 0, 0, 0,
			-5, 0, 0, 0, 0, 0, 0, -5,
			-5, 0, 0, 0, 0, 0, 0, -5,
			-5, 0, 0, 0, 0, 0, 0, -5,
			-5, 0, 0, 0, 0, 0, 0, -5,
			-5, 0, 0, 0, 0, 0, 0, -5,
			5, 10, 10, 10, 10, 10, 10, 5,
			0, 0, 0, 0, 0, 0, 0, 0},

			//Queen
			{-20,-10,-10, -5, -5,-10,-10,-20,
			-10, 0, 5, 0, 0, 0, 0,-10,
			-10, 5, 5, 5, 5, 5, 0,-10,
			0, 0, 5, 5, 5, 5, 0, -5,
			-5, 0, 5, 5, 5, 5, 0, -5,
			-10, 0, 5, 5, 5, 5, 0,-10,
			-10, 0, 0, 0, 0, 0, 0,-10,
			-20,-10,-10, -5, -5,-10,-10,-20}
		 },
		//black
		{
			//Pawn
			{0, 0, 0, 0, 0, 0, 0, 0,
			50, 50, 50, 50, 50, 50, 50, 50,
			10, 10, 20, 30, 30, 20, 10, 10,
			 5, 5, 10, 25, 25, 10, 5, 5,
			 0, 0, 0, 20, 20, 0, 0, 0,
			 5, -5,-10, 0, 0,-10, -5, 5,
			 5, 10, 10,-20,-20, 10, 10, 5,
			 0, 0, 0, 0, 0, 0, 0, 0},

			 //Knight
			 {-50,-40,-30,-30,-30,-30,-40,-50,
			 -40,-20, 0, 0, 0, 0,-20,-40,
			 -30, 0, 10, 15, 15, 10, 0,-30,
			 -30, 5, 15, 20, 20, 15, 5,-30,
			 -30, 0, 15, 20, 20, 15, 0,-30,
			 -30, 5, 10, 15, 15, 10, 5,-30,
			 -40,-20, 0, 5, 5, 0,-20,-40,
			 -50,-40,-30,-30,-30,-30,-40,-50},

			 //Bishop
			 {-20,-10,-10,-10,-10,-10,-10,-20,
			 -10, 0, 0, 0, 0, 0, 0,-10,
			 -10, 0, 5, 10, 10, 5, 0,-10,
			 -10, 5, 5, 10, 10, 5, 5,-10,
			 -10, 0, 10, 10, 10, 10, 0,-10,
			 -10, 10, 10, 10, 10, 10, 10,-10,
			 -10, 5, 0, 0, 0, 0, 5,-10,
			 -20,-10,-10,-10,-10,-10,-10,-20},

			 //Rook
			 {0, 0, 0, 0, 0, 0, 0, 0,
			 5, 10, 10, 10, 10, 10, 10, 5,
			 -5, 0, 0, 0, 0, 0, 0, -5,
			 -5, 0, 0, 0, 0, 0, 0, -5,
			 -5, 0, 0, 0, 0, 0, 0, -5,
			 -5, 0, 0, 0, 0, 0, 0, -5,
			 -5, 0, 0, 0, 0, 0, 0, -5,
			 0, 0, 0, 5, 5, 0, 0, 0},

			 //Queen
			 {-20,-10,-10, -5, -5,-10,-10,-20,
			 -10, 0, 0, 0, 0, 0, 0,-10,
			 -10, 0, 5, 5, 5, 5, 0,-10,
			  -5, 0, 5, 5, 5, 5, 0, -5,
			   0, 0, 5, 5, 5, 5, 0, -5,
			 -10, 5, 5, 5, 5, 5, 0,-10,
			 -10, 0, 5, 0, 0, 0, 0,-10,
			 -20,-10,-10, -5, -5,-10,-10,-20}
		}
	};
	const int16_t POSITION_VALUE_KING[2][2][64] =
	{
		//white	
		{
			//midgame
			{20, 30, 10, 0, 0, 10, 30, 20,
			20, 20, 0, 0, 0, 0, 20, 20,
			-10, -20, -20, -20, -20, -20, -20, -10,
			-20, -30, -30, -40, -40, -30, -30, -20,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30},

			//endgame
			{-50, -30, -30, -30, -30, -30, -30, -50,
			-30, -30, 0, 0, 0, 0, -30, -30,
			-30, -10, 20, 30, 30, 20, -10, -30,
			-30, -10, 30, 40, 40, 30, -10, -30,
			-30, -10, 30, 40, 40, 30, -10, -30,
			-30, -10, 20, 30, 30, 20, -10, -30,
			-30, -20, -10, 0, 0, -10, -20, -30,
			-50, -40, -30, -20, -20, -30, -40, -50}
		},
		//black
		{
			//midgame
			{-30,-40,-40,-50,-50,-40,-40,-30,
			-30,-40,-40,-50,-50,-40,-40,-30,
			-30,-40,-40,-50,-50,-40,-40,-30,
			-30,-40,-40,-50,-50,-40,-40,-30,
			-20,-30,-30,-40,-40,-30,-30,-20,
			-10,-20,-20,-20,-20,-20,-20,-10,
			20, 20, 0, 0, 0, 0, 20, 20,
			20, 30, 10, 0, 0, 10, 30, 20},
			//endgame
			{-50,-40,-30,-20,-20,-30,-40,-50,
			-30,-20,-10, 0, 0,-10,-20,-30,
			-30,-10, 20, 30, 30, 20,-10,-30,
			-30,-10, 30, 40, 40, 30,-10,-30,
			-30,-10, 30, 40, 40, 30,-10,-30,
			-30,-10, 20, 30, 30, 20,-10,-30,
			-30,-30, 0, 0, 0, 0,-30,-30,
			-50,-30,-30,-30,-30,-30,-30,-50}
		}
	};
}